plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://cursemaven.com" }
	maven { url "https://maven.ryanliptak.com/" }
	maven { url = uri("https://storage.googleapis.com/devan-maven/") }
	maven { url "https://maven.siphalor.de" }
	maven { url "https://api.modrinth.com/maven" }
}

configurations.all {
   resolutionStrategy {
     force("net.fabricmc:fabric-loader:$loader_version")
   }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Config
	modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
    	exclude(group: "net.fabricmc.fabric-api")
  	}
	// Modmenu
	modCompileOnly modRuntimeOnly ("com.terraformersmc:modmenu:${project.mod_menu_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Seasons
    modCompileOnly modRuntimeOnly ('maven.modrinth:fabric-seasons:2.3+1.20') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Capsaicin
	modImplementation("de.siphalor:capsaicin-1.20:1.3.3+mc1.20.1")
	include(modApi("de.siphalor:capsaicin-1.20:1.3.3+mc1.20.1"))

	// ARRP
	// modImplementation("net.devtech:arrp:${project.arrp_version}")
	// AppleSkin
	// modCompileOnly "squeek.appleskin:appleskin-fabric:mc1.19-2.4.0:api"

	// Farmers Delight
	modCompileOnly ('maven.modrinth:farmers-delight-fabric:1.4.1') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Expanded Delight
	modCompileOnly ('maven.modrinth:expanded-delight:0.2.5') {
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Vinary
	modCompileOnly ('maven.modrinth:vinery:1.4.7') {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "fabric_version": project.fabric_version, "loader_version": project.loader_version, "minecraft_version": project.minecraft_version, "cloth_config_version": project.cloth_config_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
